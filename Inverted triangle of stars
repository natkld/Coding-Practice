Write a function named upsideDown, which takes the number n as an argument and returns a triangle of n rows consisting of asterisks (*).
In the first line n stars, in the second - (n-1) asterisk,..., in the last line 1 asterisk.
All but the last lines end with the\n line translation symbol.
For example, for n = 5, a string must be obtained:

"*****\n****\n***\n**\n*"

When output to the console, such a line is displayed as an "inverted triangle":
Note: when checking the solution in tests, the line translation symbol is not displayed.
Examples:

function upsideDown (1) must return '*';
function upsideDown (3) must return "* * *\n * *\n *."

Напишите функцию с именем upsideDown, которая принимает число n в качестве аргумента и возвращает треугольник из n строк, состоящих из звездочек (*). 
В первой строке n звездочек, во второй - (n-1) звездочка, ... , в последней строке 1 звездочка.
Все строки кроме последней, заканчиваются символом \n перевода строки.
Например, для n = 5, должна быть получена строка:

"*****\n****\n***\n**\n*"

При выводе в консоль такая строка отображается как "перевернутый треугольник":
Замечание: при проверке решения в тестах символ перевода строки не отображается.
Примеры:

функция upsideDown(1) должна возвратить: "*";
функция upsideDown(3) должна возвратить: "***\n**\n*".

CODE 1:
function upsideDown(n){
  let str = '';
  for (let i = n; i >= 1; i--){
    str = str + ('*').repeat(i) + '\n';
  }
  return str.trim();
}
