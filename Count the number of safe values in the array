Write the function countOfSafeNumbers, which takes the array arr as an argument and returns the number of elements in the array that are computationally safe.
Examples:
function countOfSafeNumbers ([Infinity,  9007199254740991, -Infinity, 0]) must return 2;
function countOfSafeNumbers ([1, 3, 10, -10, NaN) must return 4;
countOfSafeNumbers ([Infinity, NaN]) must return 0.

Напишите функцию countOfSafeNumbers, которая принимает массив arr в качестве аргумента и возвращает количество элементов массива, являющихся числами, безопасными для вычислений.
Примеры:
функция countOfSafeNumbers([Infinity, 9007199254740991, -Infinity, 0]) должна возвратить 2;
функция countOfSafeNumbers([1, 3, 10, -10, NaN) должна возвратить 4;
функция countOfSafeNumbers([Infinity, NaN]) должна возвратить 0.

CODE 1:
function countOfSafeNumbers(arr){
  let count = 0
  for (let i = 0; i < arr.length; i++){
    if (Number.isSafeInteger(arr[i]) === true) {
      count++
    }
  }
    return count
}

Все тесты пройдены успешно
PassСоздана функция countOfSafeNumbers
PassФункция возвращает для массива [1, 1/0, 1/0] верный результат 1
PassФункция возвращает для массива [NaN, 1/0, 1/0] верный результат 0
PassФункция возвращает для массива [-1/0, 1/0, NaN] верный результат 0
PassФункция возвращает для массива [1, 2, 3, 4] верный результат 4
PassФункция возвращает для массива [Infinity, -Infinity, 3/0, -4/0, 'a' * 2, NaN] верный результат 0
PassФункция возвращает для массива [1, 2, 3, NaN, 4] верный результат 4
PassФункция возвращает для массива [1, 2, 3, 0/Infinity, 4] верный результат 5
PassФункция возвращает для массива [1, 2, 3, 0/Infinity, 4, 9007199254740991, -9007199254740991] верный результат 7
PassФункция возвращает для массива [2**52, 2**53, 2**54, 0/Infinity, 4, 9007199254740991, -9007199254740991] верный результат 5
