Write a function named starTriangle, which takes the number n as an argument and returns a triangle of n rows consisting of asterisks (*).
All but the last lines end with the\n line translation symbol.
For example, for n = 7, a string must be obtained:

"*\n**\n***\n****\n*****\n******\n*******"
When output to the console, such a line is displayed as a "triangle":

Note: when checking the solution in tests, the line translation symbol is not displayed.
Examples:

function starTriangle (1) must return '*';
function starTriangle (3) must return "*\n * *\n * * *."

Напишите функцию с именем starTriangle, которая принимает число n в качестве аргумента и возвращает треугольник из n строк, состоящих из звездочек (*). 
Все строки кроме последней, заканчиваются символом \n перевода строки.
Например, для n = 7, должна быть получена строка:

"*\n**\n***\n****\n*****\n******\n*******"
При выводе в консоль такая строка отображается как "треугольник":

Замечание: при проверке решения в тестах символ перевода строки не отображается.
Примеры:

функция starTriangle(1) должна возвратить: "*";
функция starTriangle(3) должна возвратить: "*\n**\n***".

CODE 1:
function starTriangle(n){
let str = '';
for (let i = 1; i <= n; i++){
  for (let j = 1; j < i + 1; j++){
  str = str + '*';
}
  str = str.trim();
  str += '\n'
}
  return str.trim();
}

Все тесты пройдены успешно
PassСоздана функция starTriangle
PassФункция для аргумента 3 возвращает верный результат "* ** ***"
PassФункция для аргумента 8 возвращает верный результат "* ** *** **** ***** ****** ******* ********"
PassФункция для аргумента 5 возвращает верный результат "* ** *** **** *****"
PassФункция для аргумента 2 возвращает верный результат "* **"
PassФункция для аргумента 9 возвращает верный результат "* ** *** **** ***** ****** ******* ******** *********"
PassФункция для аргумента 7 возвращает верный результат "* ** *** **** ***** ****** *******"
PassФункция для аргумента 10 возвращает верный результат "* ** *** **** ***** ****** ******* ******** ********* **********"
PassФункция для аргумента 5 возвращает верный результат "* ** *** **** *****"
PassФункция для аргумента 4 возвращает верный результат "* ** *** ****"
PassФункция для аргумента 6 возвращает верный результат "* ** *** **** ***** ******"
